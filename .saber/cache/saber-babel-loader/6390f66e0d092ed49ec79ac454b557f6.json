{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './polyfills';\nimport '#cache/runtime-polyfills';\nimport { join, dirname } from 'path';\nimport Vue from 'vue';\nimport Meta from 'vue-meta';\nimport layouts from '#cache/layouts';\nimport createRouter from './router';\nimport Layout from './components/LayoutManager.vue';\nimport ClientOnly from './components/ClientOnly';\nimport extendBrowserApi from '#cache/extend-browser-api';\nimport injectConfig from './helpers/inject-config';\nimport setTransition from './helpers/set-transition';\nimport scrollHandler from './helpers/scroll-handler';\nVue.config.productionTip = false;\nVue.component(ClientOnly.name, ClientOnly);\nVue.component(Layout.name, Layout);\nVue.use(Meta, {\n  keyName: 'head',\n  attribute: 'data-saber-head',\n  ssrAttribute: 'data-saber-ssr',\n  tagIDKeyName: 'vmid'\n});\nVue.mixin({\n  beforeCreate() {\n    this.$saber = this.$root;\n  }\n\n});\nexport default (context => {\n  const router = createRouter();\n  let customHead;\n  let customRootComponent;\n  const rootOptions = {\n    mixins: [],\n\n    head() {\n      const head = typeof customHead === 'function' ? customHead.call(this, this) : customHead || {};\n\n      const htmlAttrs = _objectSpread({\n        lang: this.$siteConfig.lang\n      }, head.htmlAttrs);\n\n      if (!htmlAttrs.lang) {\n        delete htmlAttrs.lang;\n      }\n\n      return _objectSpread({}, head, {\n        htmlAttrs,\n        meta: [{\n          name: 'generator',\n          content: `Saber v${__SABER_VERSION__}`\n        }, ...(head.meta || [])]\n      });\n    },\n\n    provide: {\n      layouts\n    },\n    layouts,\n    router,\n\n    data() {\n      return {\n        transition: null\n      };\n    },\n\n    mounted() {\n      scrollHandler(this.$router, this.$router.currentRoute, this.$router.currentRoute);\n    },\n\n    render(h) {\n      const transition = Object.assign({}, this.transition);\n      const listeners = {};\n      Object.keys(transition).forEach(key => {\n        if (typeof transition[key] === 'function') {\n          const kebabKey = key.replace(/([a-z])([A-Z])/, (_, p1, p2) => `${p1}-${p2.toLowerCase()}`);\n          listeners[kebabKey] = transition[key];\n          delete transition[key];\n        }\n      });\n      const beforeEnter = listeners['before-enter'];\n\n      listeners['before-enter'] = el => {\n        this.$nextTick(() => {\n          this.$emit('trigger-scroll');\n        });\n        beforeEnter && beforeEnter(el);\n      };\n\n      const children = [h('transition', {\n        props: transition,\n        on: listeners\n      }, [h('router-view')])];\n      return h('div', {\n        attrs: {\n          id: '_saber'\n        }\n      }, [customRootComponent ? h(customRootComponent, {}, children) : children]);\n    },\n\n    methods: {\n      setTransition(name) {\n        this.transition = name;\n      },\n\n      getPageLink(relativePath, extraParams) {\n        relativePath = join(dirname(this.$route.meta.__relative), relativePath);\n\n        for (const route of this.$router.options.routes) {\n          if (route.meta && route.meta.__relative && relativePath === route.meta.__relative) {\n            return `${route.path}${extraParams || ''}`;\n          }\n        } // Not a page, return the link directly\n\n\n        return relativePath;\n      }\n\n    }\n  };\n\n  const setHead = input => customHead = input;\n\n  const setRootComponent = input => customRootComponent = input;\n\n  const browserApiContext = {\n    Vue,\n    router,\n    rootOptions,\n    setHead,\n    setRootComponent\n  };\n  injectConfig(browserApiContext);\n  extendBrowserApi(browserApiContext); // Set transition after calling `extendBrowserApi`\n  // Because user might use `beforeEach` hook to add progress bar\n\n  setTransition(browserApiContext);\n  const app = new Vue(rootOptions);\n  return {\n    app,\n    router\n  };\n}); // Reloading browser when following files change\n\nif (module.hot) {\n  module.hot.accept(['#cache/layouts', '#cache/runtime-polyfills'], () => {\n    location.reload();\n  });\n}","map":{"version":3,"sources":["/Users/pence/Desktop/projects/black-000/black-000-2020/node_modules/saber/vue-renderer/app/create-app.js"],"names":["join","dirname","Vue","Meta","layouts","createRouter","Layout","ClientOnly","extendBrowserApi","injectConfig","setTransition","scrollHandler","config","productionTip","component","name","use","keyName","attribute","ssrAttribute","tagIDKeyName","mixin","beforeCreate","$saber","$root","context","router","customHead","customRootComponent","rootOptions","mixins","head","call","htmlAttrs","lang","$siteConfig","meta","content","__SABER_VERSION__","provide","data","transition","mounted","$router","currentRoute","render","h","Object","assign","listeners","keys","forEach","key","kebabKey","replace","_","p1","p2","toLowerCase","beforeEnter","el","$nextTick","$emit","children","props","on","attrs","id","methods","getPageLink","relativePath","extraParams","$route","__relative","route","options","routes","path","setHead","input","setRootComponent","browserApiContext","app","module","hot","accept","location","reload"],"mappings":"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","sourcesContent":["import './polyfills'\nimport '#cache/runtime-polyfills'\nimport { join, dirname } from 'path'\nimport Vue from 'vue'\nimport Meta from 'vue-meta'\nimport layouts from '#cache/layouts'\nimport createRouter from './router'\nimport Layout from './components/LayoutManager.vue'\nimport ClientOnly from './components/ClientOnly'\nimport extendBrowserApi from '#cache/extend-browser-api'\nimport injectConfig from './helpers/inject-config'\nimport setTransition from './helpers/set-transition'\nimport scrollHandler from './helpers/scroll-handler'\n\nVue.config.productionTip = false\n\nVue.component(ClientOnly.name, ClientOnly)\nVue.component(Layout.name, Layout)\n\nVue.use(Meta, {\n  keyName: 'head',\n  attribute: 'data-saber-head',\n  ssrAttribute: 'data-saber-ssr',\n  tagIDKeyName: 'vmid'\n})\n\nVue.mixin({\n  beforeCreate() {\n    this.$saber = this.$root\n  }\n})\n\nexport default context => {\n  const router = createRouter()\n\n  let customHead\n  let customRootComponent\n\n  const rootOptions = {\n    mixins: [],\n    head() {\n      const head =\n        typeof customHead === 'function'\n          ? customHead.call(this, this)\n          : customHead || {}\n\n      const htmlAttrs = {\n        lang: this.$siteConfig.lang,\n        ...head.htmlAttrs\n      }\n\n      if (!htmlAttrs.lang) {\n        delete htmlAttrs.lang\n      }\n\n      return {\n        ...head,\n        htmlAttrs,\n        meta: [\n          {\n            name: 'generator',\n            content: `Saber v${__SABER_VERSION__}`\n          },\n          ...(head.meta || [])\n        ]\n      }\n    },\n    provide: {\n      layouts\n    },\n    layouts,\n    router,\n    data() {\n      return {\n        transition: null\n      }\n    },\n    mounted() {\n      scrollHandler(\n        this.$router,\n        this.$router.currentRoute,\n        this.$router.currentRoute\n      )\n    },\n    render(h) {\n      const transition = Object.assign({}, this.transition)\n      const listeners = {}\n      Object.keys(transition).forEach(key => {\n        if (typeof transition[key] === 'function') {\n          const kebabKey = key.replace(\n            /([a-z])([A-Z])/,\n            (_, p1, p2) => `${p1}-${p2.toLowerCase()}`\n          )\n          listeners[kebabKey] = transition[key]\n          delete transition[key]\n        }\n      })\n      const beforeEnter = listeners['before-enter']\n      listeners['before-enter'] = el => {\n        this.$nextTick(() => {\n          this.$emit('trigger-scroll')\n        })\n        beforeEnter && beforeEnter(el)\n      }\n      const children = [\n        h(\n          'transition',\n          {\n            props: transition,\n            on: listeners\n          },\n          [h('router-view')]\n        )\n      ]\n      return h('div', { attrs: { id: '_saber' } }, [\n        customRootComponent ? h(customRootComponent, {}, children) : children\n      ])\n    },\n    methods: {\n      setTransition(name) {\n        this.transition = name\n      },\n\n      getPageLink(relativePath, extraParams) {\n        relativePath = join(dirname(this.$route.meta.__relative), relativePath)\n        for (const route of this.$router.options.routes) {\n          if (\n            route.meta &&\n            route.meta.__relative &&\n            relativePath === route.meta.__relative\n          ) {\n            return `${route.path}${extraParams || ''}`\n          }\n        }\n        // Not a page, return the link directly\n        return relativePath\n      }\n    }\n  }\n\n  const setHead = input => (customHead = input)\n  const setRootComponent = input => (customRootComponent = input)\n\n  const browserApiContext = {\n    Vue,\n    router,\n    rootOptions,\n    setHead,\n    setRootComponent\n  }\n\n  injectConfig(browserApiContext)\n  extendBrowserApi(browserApiContext)\n  // Set transition after calling `extendBrowserApi`\n  // Because user might use `beforeEach` hook to add progress bar\n  setTransition(browserApiContext)\n\n  const app = new Vue(rootOptions)\n\n  return {\n    app,\n    router\n  }\n}\n\n// Reloading browser when following files change\nif (module.hot) {\n  module.hot.accept(['#cache/layouts', '#cache/runtime-polyfills'], () => {\n    location.reload()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}